syntax = "proto3";

option java_multiple_files = true;
option java_package = "ai.smart.ix";
option java_outer_classname = "FeatureGrpcProto";
import "validate/validate.proto";

package feature;

service FeatureGrpc {
    rpc createFeature (FeatureRequest) returns (FeatureResponse) {}
    rpc getFeatureByModelTypeAndCategory (FeatureByModelTypeCategoryRequest) returns (FeatureListResponse) {}
    rpc getFeatures (GetFeatureRequest) returns (FeatureListResponse) {}
}

message FeatureRequest {
    string name = 2 [(validate.rules).string.pattern = "/.*\\S.*/"];
    string modelType = 3 [(validate.rules).string.pattern = "/.*\\S.*/"];
    FeatureCategory category = 4 [(validate.rules).enum.defined_only = true];
}

message GetFeatureRequest {
    oneof FeatureResponse {
        option (validate.required) = true;

        int64 id = 1;
        string name = 2;
        string modelType = 3;
        FeatureCategory category = 4 [(validate.rules).enum.defined_only = true];
    }
}

message FeatureByModelTypeCategoryRequest {
    string modelType = 1 [(validate.rules).string.pattern = "/.*\\S.*/"];
    FeatureCategory category = 2 [(validate.rules).enum.defined_only = true];
}

message FeatureResponse {
    int64 id = 1 [(validate.rules).int64.gt = 0];
    string name = 2 [(validate.rules).string.pattern = "/.*\\S.*/"];
    string modelType = 3 [(validate.rules).string.pattern = "/.*\\S.*/"];
    FeatureCategory category = 4 [(validate.rules).enum.defined_only = true];
}

message FeatureListResponse {
    repeated FeatureResponse features = 1;
}

enum FeatureCategory {
    SERVICE = 0;
    DEVICE = 1;
}